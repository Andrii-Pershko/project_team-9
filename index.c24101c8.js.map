{"mappings":"AAAe,IAAIA,OAAO,UAAW,CAEjCC,UAAW,aACXC,MAAM,EAGNC,WAAY,CACRC,GAAI,qBACJC,WAAW,GAIfC,WAAY,CACVC,OAAQ,sBACRC,OAAQ,uBAIVC,UAAW,CACTL,GAAI,uBCnBT,IAASM,EAAG,mBAAHA,EAA6XC,OAAOC,QAAQC,WAApXC,UAAUJ,EAAEI,QAAQJ,EAAEK,mBAAmBL,EAAEM,oBAAoBN,EAAEO,uBAAuB,SAASC,GAAG,IAAI,IAAIC,EAAEC,KAAKC,GAAGF,EAAEG,UAAUH,EAAEI,eAAeC,iBAAiBN,GAAGO,EAAE,EAAEJ,EAAEI,IAAIJ,EAAEI,KAAKN,KAAKM,EAAE,OAAOC,QAAQL,EAAEI,G,GAAM,mBAAmBf,EAAEiB,UAAUjB,EAAEiB,QAAQ,SAAST,GAAG,IAAI,IAAIC,EAAEC,KAAKD,GAAG,IAAIA,EAAES,UAAU,CAAC,GAAGT,EAAEL,QAAQI,GAAG,OAAOC,EAAEA,EAAEA,EAAEU,U,CAAW,OAAO,I,GAG/XP,SAASQ,iBAAiB,oBAAoB,W,kDAIvCC,EAAeT,SAASU,cAAiB,qBACzCC,EAAuBX,SAACE,iBAAc,mBAI1CU,EAAAC,SAA8B,SACRC,GAEnBA,EAAAN,iBAAA,kBACIZ,G,yDASaI,SAAKU,cAAa,sBAChBK,EAAS,M,wBAMMN,EAARO,UAAVC,IAAJ,S,OAM4BN,EAAbE,SAAR,SAATC,GAE2BA,EAALN,iBAAjB,SAAT,SAATZ,GACmBE,KAALO,QAAR,UAEmBW,UAAVE,OAAP,UAC6BT,EAARO,UAAVE,OAAP,S,OAM8BlB,SAATmB,KAALX,iBAAjB,SAAT,SAAAZ,GAGyB,IAFCA,EAAFwB,UAIQpB,SAATU,cAAd,iBAAXM,UAAUE,OAAO,UACiBlB,SAATU,cAAd,YAAZM,UAAME,OAAO,U,IAE2B,GAGGT,EAARD,iBAAjB,SAAT,WAC8BR,SAATU,cAAd,iBAAjBM,UAAQE,OAAO,UACyBpB,KAALkB,UAAVE,OAAP,S,OCxDjB,IACIG,EAAW,IAAIC,sBARrB,SAAiBC,GACbA,EAAMV,SAAQW,IACRA,EAAOC,gBACTD,EAAOE,OAAOV,UAAUC,IAAI,eAAe,G,GAInC,CAAEU,UAAW,CAAC,MAExBC,EAAW5B,SAASE,iBAAiB,sBACzC,IAAK,IAAI2B,KAAOD,EACdP,EAASS,QAAQD,GCXrB,MAAME,EAAS/B,SAASU,cAAc,QAEtCqB,EAAOvB,iBAAiB,SAASZ,IAC7B,MAAMoC,EAAahC,SAASU,cAAc,WAEtCqB,EAAOE,MAAMC,SADbF,EACwB,SAEA,MAAM","sources":["src/js/slider.js","src/js/modal.js","src/js/animation.js","src/js/stop-scrool.js"],"sourcesContent":["const swiper = new Swiper('.swiper', {\n    // Optional parameters\n    direction: 'horizontal',\n    loop: true,\n  \n    // If we need pagination\n    pagination: {\n        el: '.swiper-pagination',\n        clickable: true,\n    },\n  \n    // Navigation arrows\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n  \n    // And if we need scrollbar\n    scrollbar: {\n      el: '.swiper-scrollbar',\n    },\n  });","!function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n   /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n   var modalButtons = document.querySelectorAll('.js-open-modal'),\n       overlay      = document.querySelector('.js-overlay-modal'),\n       closeButtons = document.querySelectorAll('.js-modal-close');\n\n\n   /* Перебираем массив кнопок */\n   modalButtons.forEach(function(item){\n\n      /* Назначаем каждой кнопке обработчик клика */\n      item.addEventListener('click', function(e) {\n\n         /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n         e.preventDefault();\n\n         /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n         var modalId = this.getAttribute('data-modal'),\n             modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n\n         /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n         modalElem.classList.add('active');\n         overlay.classList.add('active');\n      }); // end click\n\n   }); // end foreach\n\n\n   closeButtons.forEach(function(item){\n\n      item.addEventListener('click', function(e) {\n         var parentModal = this.closest('.modal');\n\n         parentModal.classList.remove('active');\n         overlay.classList.remove('active');\n      });\n\n   }); // end foreach\n\n\n    document.body.addEventListener('keyup', function (e) {\n        var key = e.keyCode;\n\n        if (key == 27) {\n\n            document.querySelector('.modal.active').classList.remove('active');\n            document.querySelector('.overlay').classList.remove('active');\n        };\n    }, false);\n\n\n    overlay.addEventListener('click', function() {\n        document.querySelector('.modal.active').classList.remove('active');\n        this.classList.remove('active');\n    });\n\n\n\n\n}); // end ready","function onEntry(entry) {\n    entry.forEach(change => {\n      if (change.isIntersecting) {\n        change.target.classList.add('element-show');\n      }\n    });\n  }\n  let options = { threshold: [0.5] };\n  let observer = new IntersectionObserver(onEntry, options);\n  let elements = document.querySelectorAll('.element-animation');\n  for (let elm of elements) {\n    observer.observe(elm);\n  }","const elBody = document.querySelector('body');\n\nelBody.addEventListener('click', e => {\n    const checkModal = document.querySelector('.active');\n    if (checkModal) {\n        elBody.style.overflow = 'hidden';\n    } else {\n        elBody.style.overflow = 'auto';\n    }\n})\n\n"],"names":["Swiper","direction","loop","pagination","el","clickable","navigation","nextEl","prevEl","scrollbar","e1","window","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","e","t","this","o","document","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","addEventListener","overlay","querySelector","closeButtons","modalButtons","forEach","item","modalId","classList","add","remove","body","keyCode","$102a1c8203678332$var$observer","IntersectionObserver","entry","change","isIntersecting","target","threshold","$102a1c8203678332$var$elements","elm","observe","$203d40151997f84b$var$elBody","checkModal","style","overflow"],"version":3,"file":"index.c24101c8.js.map"}